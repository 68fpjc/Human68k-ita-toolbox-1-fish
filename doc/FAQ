【91/11/30】



『環境変数をSETしている*.BATプログラムを実行すると、
　「環境のためのメモリがたりません」と言われてしまう』


	シェル変数 envmargin を設定してください。たとえば

		set envmargin=512

	を実行すると、それ以後 FISH は起動するコマンドに渡す環境エリアに
	512バイトの余白を持たせます。



『環境変数をセットすることができない』


	たとえば COMMAND.X での

		SET FOO=BAR
		SET FOO=

	は、FISH では

		setenv FOO BAR
		unsetenv FOO

	です。ここで、FOO や BAR が FISH にとって意味のある文字を含んで
	いるならば、当然、クオートしなければなりません。マニュアルをよく
	お読みください。

	なお、FISH にも set というコマンドがありますが、これは環境変数で
	はなくシェル変数をセットするものです。お間違いなく。



『組み込みコマンドを実行することができないんだけど？』


	シェル変数 path に‘~~’というディレクトリがセットされていないの
	でしょう。組み込みコマンドは、FISH内部での仮想的なディレクトリ
	‘~~’に存在しています。コマンド名だけで組み込みコマンドを実行す
	るには path に‘~~’が含まれていなければなりません。さもなくば、
	たとえば組み込みコマンド echo を実行するには ~~/echo と書かなけ
	ればなりません。

	‘~~’はシェル変数 path の先頭に置くのが一般的です。たとえば

		set path=(~~ . /bin /usr/bin /usr/ucb)

	というようにです。もしFISHの組み込みコマンドの一部を外部コマンド
	に置き換えたいと思うならば、次のような設定がそれを可能にします。

		set path=(/usr/another ~~ . /bin /usr/bin /usr/ucb)

	FISHは起動時に環境変数 path からシェル変数 path を生成します。ま
	た、環境変数 path が再設定されたときには、シェル変数 path も自動
	的に再設定されます。このときにはシェル変数 path の先頭に自動的に
	‘~~’と‘.’が追加されますから心配いりません。しかし、シェル変数
	path を自分で再設定する際には注意が必要です。



『外部コマンドをパス指定で起動することができないんだけど？』


	‘\bin\cat’のように‘\’でディレクトリを区切っていませんか？
	FISHでは‘\’はエスケープ文字ですので、‘\bin\cat’は‘bincat’と
	同じです。ディレクトリの区切りには、‘/bin/cat’のように‘/’を使
	用してください。コマンドへの引数などで、どうしても‘\’を使用しな
	ければならない場合には‘\\’と書くか、または引数を‘"’か‘'’の
	どちらかで囲ってください。



『 ls *.c とタイプしたら、「外部コマンドへのパラメータが255バイトを超過し
ます」と出ておしまいになるんだけど、どうしたらいいんでしょう？』


	FISH は‘*.c’の部分をファイル名展開して、その結果を ls に渡そう
	とします。このとき引数の合計長が255バイトを超えていると、通常は
	エラーとしてコマンドの起動を中止します。255バイトを超える引数を
	渡すとバスエラーなどの障害を引き起こすコマンドが多く存在するから
	です。

	引数の合計長が255バイトを超えた場合の対処は、シェル変数 hugearg
	で制御することができます。

	set hugearg=force としておくと、強引にコマンドを起動します。起動
	するコマンドが255バイト以上の引数を受け取ることができるものなら
	ば、この設定が良いでしょう。

	set hugearg=indirect としておくと、引数を一時ファイルに書き込み、
	コマンドには引数として‘-+-+-<ファイル名>’を渡します。<ファイル
	名> のディレクトリは‘\’で区切られています。

	set hugearg=(indirect <文字列>) としておくと、‘-+-+-’の代わり
	に <文字列> を使います。たとえば SHARP/Hudson の LK.X は、オプショ
	ン引数 -i<ファイル> によって <ファイル> から引数を与えることがで
	きますから、LK.X を起動する前に set hugearg=(indirect -i) として
	おけば良いでしょう。

	シェル変数 hugearg がセットされていなかったり、hugearg の設定が
	以上のどれにも当てはまらない場合には、FISHはとりあえずコマンドを
	ロードして、それが HUPAIR適合コマンドであるかどうかを調べます。
	HUPAIR適合コマンドであれば、255バイトを超える引数を受け取ること
	ができるはずですから、そのままコマンドを実行します。コマンドが
	HUPAIR適合コマンドでないならばコマンドを実行せず、エラーとして停
	止します。

	ところで、ファイル名展開を行うシェルが Human68k 上に存在しなかっ
	た頃に書かれたコマンドの多くは、独自に引数をファイル名展開してい
	ます。そこで FISHで‘*.c’を展開せずにそのままの形でコマンドに渡
　　　　したいのであれば、

		\*.c
		"*.c"
		'*.c'

	などのように書いてください。

	あるいは、set noglob を実行してFISHのファイル名展開機構を殺して
	しまうという手もあります。（それよりはコマンドが HUPAIR適合とな
　　　　ることを私は願っていますが）



『 bib -? とタイプしても bib のヘルプが出なくて、かわりに「マッ
チするファイルやディレクトリがありません」と出るんだけど、どうし
て？　COMMAND.X からだとちゃんとヘルプが出るのに。』


	‘?’はファイル名展開のメタ文字なので、FISHは‘-?’をファイル名
	展開パターンと見なし、これにマッチするファイルやディレクトリに置
	換しようとします。「マッチするファイルやディレクトリがありません」
	と表示されるのは、‘-?’にマッチするファイルやディレクトリが１つ
	も無かったからです。

	‘-?’という引数を置くには、

		bib -\?
		bib '-?'
		bib "-?"
		bib -'?'
		bib -"?"

	などのように書きます。

	あるいは、set noglob を実行してFISHのファイル名展開機構を殺して
	しまうという手もあります。



『HISTORY.X の ^W みたいなことはできないの？』


	行編集機能 up-history / down-history をお使いください。この２つの
	機能は、「行の先頭からカーソルの直前まで」にマッチするイベントを
	呼び出します。

	カーソルを行の先頭に移動してからこれらの機能を働かせると、履歴リ
	ストを１イベントずつ上下することになります。

	入力行に文字を追加したり削除したりすると、履歴リストの検索開始位
	置は最新イベントの位置にリセットされます。

	FISH配布パッケージに含まれている %fishrc のサンプル・ファイル
	Pfishrc では、この２つの機能は ^P と ^N にバインドしています。



『スクリプトの最後の行が実行されないようだけど？』


	その行のおしまいに改行が無いのでしょう。FISHは改行コードまでを１
	つの物理行と認めます。改行コードを読み取らないうちに入力が途切れ
	た場合には、FISHはそれまでに読み取った文字列を不完全なものとして
	捨てます。ですから、スクリプト・ファイルの最後の行にも必ず改行を
	入れるようにしてください。

			* NEmacs をお使いならば require-final-newline を
			  nil 以外にしておくと安心ですね。



『 B: と入力してもカレント・ドライブが変わらない』


	カレント・ドライブを変えるには、カレント・ディレクトリを変えると
	きと同様、組み込みコマンド cd / chdir / pushd を用います。たとえ
	ばドライブ B に移動したいならば

		cd B:

	を実行します。

		B:

	は、FISHでは‘B’というラベルを意味します。



『GOTO は無い？』


	組み込みコマンド goto があります。対話モードでは使用することがで
	きませんが、スクリプトでは goto でスクリプト中のラベルに跳ぶこと
	ができます。ラベルは COMMAND.X のように

		:label

	と書くのではなく、Ｃのように

		label:

	と書きます。ラベルは行の先頭になくてはなりません。



『 repeat 10 echo $, を実行すると，10回とも同じ数字が表示される。』


	変数置換 $, がコマンドを実行する前に行われるからです。たとえば
	このとき $, が 5963 であったとすると，

		repeat 10 echo $,

	は

		repeat 10 echo 5963

	と同じことになってしまいます。このようなケースでは、組み込みコマ
	ンド eval が有用です。

		repeat 10 eval 'echo $,'

	のようにしてください。



【以上】
