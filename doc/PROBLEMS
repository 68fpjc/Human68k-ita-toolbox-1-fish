
	今回のリリースはテスト版であり，まだ少々問題を含んでいます．
	わかっている問題点と今後の課題を以下に挙げておきます．以下
	の点についてアドバイスがあればぜひお聞かせ下さい．


    ● 環境の保護


	Human68k では，環境変数やカレントのドライブ／ディレクトリ
	などの環境はプロセス毎に独立していませんので，行儀の悪いユー
	ザ・プログラムは親プロセスの環境を変更してしまいます．これ
	は好ましいことではありません．そこで FISH はこの問題を次の
	ように解決しています．


	・ 環境変数

	FISH は，子プロセスには自分の環境変数の複製を渡すことによっ
	て自分の環境変数が変更されてしまうのを防いでいます．

	ところで FISH 自身は親プロセスから継承した環境を自分の領域
	にコピーして使用し，親プロセスの環境を変更してしまわないよ
	うにしています．

	FISH のように，親プロセスから受け取った環境変数は変更せず，
	それを自分のために複製して複製の方を書き換える．そういった
	行儀の良いプログラムを FISH から起動したときには，無駄な複
	製が行われることになり，行儀の良さが仇となってしまいますが，
	これは仕方の無いことと考えています．


	・ カレント・ドライブ／ディレクトリ

	FISH は子プロセスを起動する前にカレント・ドライブ／ディレ
	クトリを記憶しておき，子プロセス終了後，元に戻します．

	しかし，これではまだ完全とは言えません．カレント・ドライブ
	以外にも，すべてのドライブのカレント・ディレクトリも保護す
	べきでしょう．

	けれども，DRIVE.X や SUBST.X でドライブの構成が変えられて
	しまったらどうしたら良いのでしょう？


	・ その他

	ブレーク・フラグやベリファイ・フラグ等も保護するべきかも知
	れません．その他にも保護すべき環境があるかも知れません．

	FISH は，何と何を保護するべきでしょう？


    ● 端末対応


	現在は，端末として標準のデバイス CON を前提としています．
	標準入出力を他のデバイスに切り替えて FISH を起動すれば，他
	の端末から FISH を利用することは可能だと思いますが，端末と
	なり得るものが手元に無いのでチェックができません．

	さまざまな端末に対応するためには，ファイル /etc/termcap
	（あるいは /usr/lib/terminfo/*）とシェル変数 term，あるい
	は環境変数 TERMCAP に対応するべきでしょう．また，マルチ・
	カラム文字の文字幅を記述する変数も必要でしょう．


    ● 端末へのエコー・バック


	FISH の行入力ルーチンや，DOS ファンクション gets では，入
	力のエコー・バックは標準出力に対して行いますので，FISH の
	標準出力をリダイレクトすると，端末に入力文字がエコー・バッ
	クされなくなってしまいます．


    ● 標準エラー出力を切り替えているときのエラー・メッセージ


	コマンドの標準エラー出力を切り替えてからコマンドを起動する
	までの間にエラーが発生すると，端末にエラー・メッセージが表
	示されない場合があります．


    ● ~/%logout 実行中の ^C


	~/%logout を実行中は ^C を禁止すべきですが，その手段があり
	ません．


    ● 非HUPAIR適合コマンドに対するコマンドラインの文字列が255バイ
       トを超えたとき


	シェル変数 hugearg に force か indirect がセットされていな
	い場合にはエラーとなりますが，エラーとする前にユーザに問い
	合わせるのが良いかも知れません．


    ● 各データ領域の大きさ


	FISH の環境変数，シェル変数，別名，ディレクトリ・スタック，
	キー・マクロの大きさは固定されています．このうち環境変数の
	大きさは起動時の引数で増減できるものの，それ以後は変更でき
	ません．


    ● 行の長さ


	行およびそれを分解した単語リストの長さは4096バイトに，単語
	の長さは255バイトに，単語数は2048個に制限しています．実用
	的には充分であると思いますが，もう少し多い方がいいかも知れ
	ません．FISH は内部のデータ領域に単語リストを扱う固定長の
	バッファを数本持っていますが，これを動的に変更するようにす
	れば，長さの制限を緩和することができますし，FISH はもっと
	コンパクトになります．


    ● TwentyOne 対応


	大丈夫だとは思いますが，特にチェックはしていません．
	チェックよろしく >>! Ｅｘｔさん  :-)


    ● バックグラウンド実行とジョブ管理


	非常に残念ながら FISH はコマンドをバックグラウンドで実行す
	ることはできません．一度挑戦して，ある程度は動いたのですが，
	端末，標準入出力，^C や エラーの処理ルーチンなどの環境をジョ
	ブ毎に独立とすることができないため，結局断念しました．


    ● コマンド置換


	Ｃシェルではコマンド置換で修飾子は使えませんが，FISH では
	使えるようにしたいと思っています．これは文法に絡むことなの
	で，正式版までに決定したいと思います．


    ● スクリプト・モードでのエラー・メッセージ


	スクリプトを実行中のエラー・メッセージはスクリプト・ファイ
	ルのパス名と行番号と共に表示したいと思っています．


    ● 行編集の各機能への引数


	例えば ESC-<数字> で universal-argument をセットできるよう
	にしたいと思っています．


    ● SX/Ko 対応


	これは，実現できるものならば是非実現したいと思っていますが，
	まったくもって未定です．


