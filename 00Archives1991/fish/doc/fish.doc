                                                                      ｆｉｓｈ

                                                          ユーザーズマニュアル

                                                                        第一版


                                                                      板垣史彦





















                                                        ＨＵＤＳＯＮ　ＳＯＦＴ
------------------------------------------------------------------------------
前書き





　fishは、ItaMakeに組み込んだシェルがもとになっています。ItaMakeを書いた当時の
課題は、COMMAND.COMに依存しないでコマンドを実行することでした。COMMAND.COMは実
行したコマンドの終了コードを返さないので、ItaMakeにとっては都合が悪かったので
す。それで、私は簡単なシェルを作り、ItaMakeに組み込みました。このシェルをテス
トしているうち、私は、それが独立したシェルとしても十分快適なものになり得ること
に気付きました。そしてこのシェルをfishと名付け、別名機構やシェル変数とコマンド
の置き換え機構といった機能を加えて行きました。これらの機能は、UNIXのＣシェルを
手本にしたものです。
　組み込みコマンドとしてmakeを持っていることは、fishの最もユニークなところです。
ItaMakeからfishを独立させたとき、makeの部分は切り離さずに、fishの組み込みコマ
ンドとしてそのまま残したのです。こうしたことによって得られたメリットは少なくあ
りません。
　私は、fishが与える開発環境を多くの方に利用していただきたいと思います。そして、
シェルやmakeに関して新しいアイデアがあれば、是非お寄せください。







                                                                      板垣史彦
                                                                   HUDSON SOFT
------------------------------------------------------------------------------
はじめに





　“fish”(Fumihiko Itagaki's shell)は、「MS-DOS」上で動作するシェル（コマンド
・インタープリタ）です。MS-DOSには“COMMAND.COM”という標準のシェルが用意され
ていますが、COMMAND.COMが持っている機能はfishでもまったく同じように使用できる
か、または代替機能があります。その上、fishにはCOMMAND.COMにない便利な機能があ
ります。これらの機能はUNIXのＣシェルを手本としていますので、UNIXユーザにとって
も使いやすいものと思います。（ただし、MS-DOSの仕様を超えるものではないというこ
とを念のため付け加えておきます。）

　fishの最もユニークな点は、“make”コマンド（ItaMake）を「組み込みコマンド」
として持っていることです。これは、実はわざわざ組み込んだものではありません。少
々ややこしいのですが、fishはItaMakeに内蔵されていたものなのです。

　私が ItaMakeを開発した際、同時に新たなシェルも開発しなければなりませんでした。
なぜなら、終了ステータスを返さないCOMMAND.COMはItaMake が呼び出すシェルとして不
適当だったからです。また、MS-DOS では外部コマンドに対してコマンド行で
渡すことができるパラメータの長さは最長 126 文字ですので、たとえばリンクファイ
ルを作成するために長さがこれを越えるマクロを出力するようなことを可能にするため
には、どうしてもシェルを ItaMake の内部に持つ必要がありました。

　ItaMake に内蔵したシェルは最初は簡素なものでしたが、最終的にはかなり使い勝手
の良いものとなりました。そこで、ItaMake 全体が「ItaMake 内蔵シェルの組み込みコ
マンド」として動作するように作り変えました。これが“fish”です。つまり、「ItaM
ake 内蔵シェル」は「fish」となり、「ItaMake」は「fish 組み込みコマンド」となっ
たわけです。




本書の読み方
------------------------------------------------------------------------------
　このマニュアルは２つの部分からなっています。第１部「fish 入門」では、fish の
使い方を平易に説明します。fish を初めて使う方は一度は目を通してください。続く
第２部「fish リファレンスガイド」には、fish の文法や組み込みコマンドが参照に便
利な形式で詳細に記述してあります。第１部の知識だけでも fish を使うことはできま
すが、そこでは厳密さよりも平易さを主として記述しています。より詳細な知識を必要
とするときには第２部を参照してください。

　なお、本書は既に MS-DOS についてひととおり理解している MS-DOS のユーザを対象
としており、MS-DOS についての初歩的な解説は避けています。また、fish の概念や操
作方法を COMMAND.COM と対比して説明することがあります。初めて MS-DOS を使う方は、
MS-DOS のマニュアルや解説書と併せてお読みください。

















                                    第１部


                                 ｆｉｓｈ入門












　第１部は、実際の例を中心にしています。読み進みながら実際に動かしてみてください。













------------------------------------------------------------------------------
　fish を起動すると、画面にプロンプト(“% ”)が表示されて入力待ちの状態になり
ます。ここでユーザがコマンドを入力すると、fish は入力された行を解析し、コマン
ドを実行します。


単一のコマンド

　pwd (print working directory) コマンドは、カレントディレクトリの完全なパス名
を表示します。

　　　　% pwd
　　　　C:\USR\ITA

　この例では、カレントディレクトリは C:\USR\ITA です。


出力を切り替える

　コマンドの出力をファイルに切り替えることができます。

　　　　% pwd > cwd
　　　　% cat cwd
　　　　C:\USR\BIN

　上記の例のように、> file は、出力先を file に切り替えることを fish に対して
指令します。file は、もし存在していなければ作成されます。
　






パイプライン

　パイプ機能も、COMMAND.COM と全く同じように記述することができます。


　このように一連のコマンドをパイプで接続したコマンドと、単一のコマンドとを、一括して
「パイプライン」と呼びます。


　パイプラインを、&& または || で接続することができます。パイプラインが && で接続さ
れているとき、最初のパイプラインが真のときに限って、後続のパイプラインが実行されます。






リダイレクション

　単一のコマンドに対して、標準入出力をリダイレクトすることができます。これも CO
MMAND.COM と全く同じです。

　　　　echo Hello > file

は、パラメータの文字列を、画面ではなく、ファイル“file”に出力します。








起動と
























